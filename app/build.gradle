apply plugin: 'com.android.application'
apply plugin: 'com.android.compat'


project.logger.error "[CompatPlugin] isAapt2EnabledCompat:${isAapt2EnabledCompat()}"
project.logger.error "[CompatPlugin] isAapt2JniEnabledCompat:${isAapt2JniEnabledCompat()}"
project.logger.error "[CompatPlugin] isAapt2DaemonModeEnabledCompat:${isAapt2DaemonModeEnabledCompat()}"
project.logger.error "[CompatPlugin] getAndroidGradlePluginVersionCompat:${getAndroidGradlePluginVersionCompat()}"
project.logger.error "[CompatPlugin] isJenkins:${isJenkins()}"

//启用providedAar功能
providedAarCompat()

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "io.github.lizhangqu.samples"
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        debug {

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'

    providedAar 'com.tencent.tinker:tinker-android-lib:1.9.1'


}


project.afterEvaluate {
    project.logger.error "host getPublishApFileCompat:${getPublishApFileCompat('release')}"
    project.logger.error "host getRDirCompat:${getRDirCompat('release')}"
    project.logger.error "host getRFileCompat:${getRFileCompat('release')}"
    project.logger.error "host getPackageForRCompatCompat:${getPackageForRCompatCompat('release')}"
    project.logger.error "host R File exists:${getRFileCompat('release').exists()}"
}

project.logger.error "getPublishApFileCompat:${getPublishApFileCompat('release')}"
project.logger.error "getRDirCompat:${getRDirCompat('release')}"
project.logger.error "getRFileCompat:${getRFileCompat('release')}"
project.logger.error "getPackageForRCompatCompat:${getPackageForRCompatCompat('release')}"
project.logger.error "R File exists:${getRFileCompat('release').exists()}"
